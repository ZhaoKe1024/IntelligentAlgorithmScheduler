# -*- coding: utf-8 -*-
# @Author : ZhaoKe
# @Time : 2021-04-07 11:33
from utils.Entities import Cloudlet, VM
import numpy as np
import scipy as sp


def get_data_r2n3c12(ind: int):
    if ind == 1:
        nodes = [
            VM(0, 0.07, 2, 650, 2223),
            VM(1, 0.11, 2, 1400, 2223),
            VM(2, 0.14, 2, 1500, 2223),
        ]
        lets = [
            Cloudlet(0.20452260719056714, 97.92036009928896),
            Cloudlet(0.28324152431976857, 203.6851393691716),
            Cloudlet(0.010879813032502392, 240.9519142066456),
            Cloudlet(0.1486214978322752, 191.74472592367337),
            Cloudlet(0.036751379394306366, 261.6995852755745),
            Cloudlet(0.10342998804270276, 188.82857887515),
            Cloudlet(0.12136778080161725, 92.0382408075655),
            Cloudlet(0.20212091779134683, 170.4132488653559),
            Cloudlet(0.13820186393327047, 133.14949767532323),
            Cloudlet(0.14654865994882177, 141.97237969469882),
            Cloudlet(0.10643268209338297, 165.6792746614171),
            Cloudlet(0.12394678165532778, 216.91341169130703),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 2:
        nodes = [
            VM(0, 0.07, 2, 650, 2223),
            VM(1, 0.11, 2, 1400, 2223),
            VM(2, 0.14, 2, 1500, 2223),
        ]
        lets = [
            Cloudlet(0.13319092276249678, 223.40096035204988),
            Cloudlet(0.21738639913249655, 152.0135921173882),
            Cloudlet(0.07246857305287957, 226.29977902295445),
            Cloudlet(0.019370351635005764, 165.2301259629893),
            Cloudlet(0.09480779353939567, 201.78021102720885),
            Cloudlet(0.1369809110158409, 144.76192512138763),
            Cloudlet(0.16475458648503433, 148.54590556949609),
            Cloudlet(0.0834129238658052, 218.58221285305328),
            Cloudlet(0.11581546212252139, 112.85666242275633),
            Cloudlet(0.13929510103557627, 107.40706401645812),
            Cloudlet(0.1565221397825591, 193.78155002230113),
            Cloudlet(0.19102180869300486, 112.4530702058775),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 3:
        nodes = [
            VM(0, 0.07, 2, 650, 2223),
            VM(1, 0.11, 2, 1400, 2223),
            VM(2, 0.14, 2, 1500, 2223),
        ]
        lets = [
            Cloudlet(0.06827156294599246, 68.58700882415538),
            Cloudlet(0.16272449565925795, 249.30427397724674),
            Cloudlet(0.05691834018008601, 171.9875191534254),
            Cloudlet(0.06739049174782769, 124.39382036975336),
            Cloudlet(0.11653446836803275, 156.10700645463714),
            Cloudlet(0.08458947752094678, 161.385020007308),
            Cloudlet(0.1823721784540141, 130.19350607849807),
            Cloudlet(0.24637466910710137, 225.61602478328365),
            Cloudlet(0.07774331908828445, 200.6671251245882),
            Cloudlet(0.141332172069729, 237.83022700270112),
            Cloudlet(0.22823490300220478, 171.20962348440577),
            Cloudlet(0.11250231816362276, 205.95860172194222),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 4:
        nodes = [
            VM(0, 0.07, 2, 650, 2223),
            VM(1, 0.11, 2, 1400, 2223),
            VM(2, 0.14, 2, 1500, 2223),
        ]
        lets = [
            Cloudlet(0.05597964158087765, 170.08533036562363),
            Cloudlet(0.14994815203385584, 76.98507603745016),
            Cloudlet(0.12348171310736478, 179.14468080256475),
            Cloudlet(0.1440568312988094, 180.2429151113809),
            Cloudlet(0.08161995677303902, 150.22556454544855),
            Cloudlet(0.2020183477212536, 210.74594903191993),
            Cloudlet(0.034971540608563556, 262.1337595410899),
            Cloudlet(0.07371257918130304, 317.46883522973724),
            Cloudlet(0.12593337974741864, 198.43266356951753),
            Cloudlet(0.03750712376063421, 125.1579182893199),
            Cloudlet(0.11966098158691117, 255.31944171792637),
            Cloudlet(0.1350980459668553, 239.38180661939523),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 5:
        nodes = [
            VM(0, 0.07, 2, 650, 2223),
            VM(1, 0.11, 2, 1400, 2223),
            VM(2, 0.14, 2, 1500, 2223),
        ]
        lets = [
            Cloudlet(0.20452260719056714, 97.92036009928896),
            Cloudlet(0.28324152431976857, 203.6851393691716),
            Cloudlet(0.010879813032502392, 240.9519142066456),
            Cloudlet(0.1486214978322752, 191.74472592367337),
            Cloudlet(0.036751379394306366, 261.6995852755745),
            Cloudlet(0.10342998804270276, 188.82857887515),
            Cloudlet(0.12136778080161725, 92.0382408075655),
            Cloudlet(0.20212091779134683, 170.4132488653559),
            Cloudlet(0.13820186393327047, 133.14949767532323),
            Cloudlet(0.14654865994882177, 141.97237969469882),
            Cloudlet(0.10643268209338297, 165.6792746614171),
            Cloudlet(0.12394678165532778, 216.91341169130703),
        ]
        return {"cloudlets": lets, "nodes": nodes}


def get_data_r2n4c18(ind: int):
    if ind == 1:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            # 平台 - 实验分离式虚拟仿真实验平台建设方案与实验设计
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.762, 2, 1200, 2223),  # 4
        ]
        lets = [
            Cloudlet(0.078400, 60.68978272),
            Cloudlet(0.065683, 185.8460500625),
            Cloudlet(0.050440, 96.030787453),
            Cloudlet(0.104019, 131.42382384854),  # 4
            Cloudlet(0.022355, 192.5826727387),
            Cloudlet(0.232862, 226.0855541793),
            Cloudlet(0.194654, 77.50439297744),
            Cloudlet(0.148194, 241.34944786555),  # 8
            Cloudlet(0.146926, 199.978513349),
            Cloudlet(0.081256, 149.8241468),
            Cloudlet(0.237547, 141.05075466394),
            Cloudlet(0.138457, 139.5088569496),  # 12
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 2:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.762, 2, 1200, 2223),  # 4
        ]
        lets = [
            Cloudlet(0.07550146705090702, 124.0854408230196),
            Cloudlet(0.010895545386818861, 73.59482261666575),
            Cloudlet(0.11531695521179278, 204.51592116875831),
            Cloudlet(0.12702944131900698, 225.164338144696796471),
            Cloudlet(0.06834991300011742, 229.8701228008688),
            Cloudlet(0.11216529887275574, 172.81504882024458),
            Cloudlet(0.15999451050938146, 172.99679675),
            Cloudlet(0.1315471815363387, 139.121173459785),  # 8
            Cloudlet(0.10450586234927284, 120.3591366931),
            Cloudlet(0.1833488695783557, 116.794904709483),
            Cloudlet(0.1109515921732946, 152.589248),
            Cloudlet(0.10958218539821069, 231.3849),
            Cloudlet(0.23484805635977368, 106.8385),
            Cloudlet(0.06770828837652826, 204.757823),  # 14
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 3:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.762, 2, 1200, 2223),  # 4
        ]
        lets = [
            Cloudlet(0.12874254772945218, 136.44796585),
            Cloudlet(0.18483982215826322, 121.1193345415119),
            Cloudlet(0.08963924923046288, 108.471282116491),
            Cloudlet(0.1851459744850225, 218.58889055),
            Cloudlet(0.06792387554313283, 154.7258978868),
            Cloudlet(0.2462318516488033, 174.46656608667),
            Cloudlet(0.10883051164483727, 147.73462828806),
            Cloudlet(0.16691940183896012, 123.3245073053),
            Cloudlet(0.018257971520970473, 161.3443284425),
            Cloudlet(0.08995359941469963, 172.515609277),
            Cloudlet(0.07040919176059576, 155.690345830672),
            Cloudlet(0.06547942210627127, 98.2176562311497),
            Cloudlet(0.025093378802956284, 177.08541324),
            Cloudlet(0.11646009169468657, 144.839780117297),
            Cloudlet(0.16371016848398692, 246.3220041106),
            Cloudlet(0.2231452130188728, 191.5201876),  # 16
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 4:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.762, 2, 1200, 2223),  # 4
        ]
        lets = [
            Cloudlet(0.16393487994218633, 155.396400879757),
            Cloudlet(0.04657757468647096, 112.3161764),
            Cloudlet(0.12913528939116553, 163.7759),
            Cloudlet(0.1872671144509293, 228.56074),
            Cloudlet(0.1665421948201849, 143.8823),
            Cloudlet(0.19683241834027054, 85.9410),
            Cloudlet(0.06985914651657604, 113.7580),
            Cloudlet(0.1294845631957269, 200.8972890),  # 8
            Cloudlet(0.10504235648355059, 132.304997),
            Cloudlet(0.21367411783465512, 195.747424),
            Cloudlet(0.11208564538186763, 186.1437057),
            Cloudlet(0.10211937792906675, 98.7812481),
            Cloudlet(0.11840825864288021, 180.1944),
            Cloudlet(0.11995729797568175, 230.58047),
            Cloudlet(0.0866584583915872, 194.4519),
            Cloudlet(0.07314441035535499, 271.2620),  # 16
            Cloudlet(0.060152316329560196, 233.5644),
            Cloudlet(0.11811555665419446, 172.6705),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 5:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.762, 2, 1200, 2223),  # 4
        ]
        lets = [
            Cloudlet(0.09497719750497738, 133.748),
            Cloudlet(0.04134889942725034, 182.18740),
            Cloudlet(0.1652987111173274, 245.5174),
            Cloudlet(0.05048242163899229, 163.3917),
            Cloudlet(0.15419304240236312, 239.12344),
            Cloudlet(0.0443814282079153, 178.674093),
            Cloudlet(0.005132646503235916, 150.630887),
            Cloudlet(0.07609612051115648, 130.2383589),
            Cloudlet(0.12842564994953334, 219.650448188),
            Cloudlet(0.1790330053668346, 138.3699689),
            Cloudlet(0.09109949584448564, 84.3515),
            Cloudlet(0.13127545105287233, 174.60262027),  # 12
            Cloudlet(0.0332975176385959, 148.6493571351),
            Cloudlet(0.03638428120792753, 202.362961700),
            Cloudlet(0.0921992506252701, 111.622514317),
            Cloudlet(0.1621225840400646, 141.789558),  # 16
            Cloudlet(0.038541106606808026, 209.64167),
            Cloudlet(0.18592732605634021, 250.16472714),
            Cloudlet(0.03638428120792753, 202.362961700),
            Cloudlet(0.0921992506252701, 111.622514317),  # 20
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 6:
        nodes = [
            VM(0, 0.762, 2, 920, 2223, 400, 2000),
            VM(1, 0.762, 2, 1200, 2223, 1000, 2000),
            # 平台 - 实验分离式虚拟仿真实验平台建设方案与实验设计
            VM(2, 0.762, 2, 850, 2223, 800, 2000),
            VM(3, 0.762, 2, 1200, 2223, 900, 2000),  # 4
        ]
        lets = [
            Cloudlet(0.13, 116),  # , 228.9767525518272),
            Cloudlet(0.279, 82),  # , 187.97925460500625),
            Cloudlet(0.065, 141),  # 206.77315938787453),
            Cloudlet(0.29, 65),  # 218.78608382384854),  # 4
            Cloudlet(0.096, 101),  # 231.9710696727387),
            Cloudlet(0.237, 101),  # 233.03395445541793),
            Cloudlet(0.06, 70),  # 190.41556439297744),
            Cloudlet(0.056, 190),  # 264.54311244786555),  # 8
            Cloudlet(0.2, 104),  # 248.2824412513349),
            Cloudlet(0.05, 161),  # 243.16971522421468),
            Cloudlet(0.07, 178),  # 277.01199985466394),
            Cloudlet(0.204, 113),  # 271.25359518569496),
            Cloudlet(0.146, 179),  # 245.98393640211285),
            Cloudlet(0.06, 129),  # 214.0395006818089),
            Cloudlet(0.04, 193),  # 251.24327206708733),
            Cloudlet(0.117, 329),  # 197.81288865451026),  # 16
            Cloudlet(0.06, 100),  # 245.59672377663492),
            Cloudlet(0.27, 92),  # 277.3108057619953),  # 18
        ]
        return {"cloudlets": lets, "nodes": nodes}


def get_data_r2n5c20(ind: int):
    if ind == 1:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.762, 2, 1200, 2223),
            VM(4, 0.562, 2, 520, 2223),
        ]
        lets = [
            Cloudlet(0.149028, 207.29202854232486),
            Cloudlet(0.22775697, 217.65238367958395),
            Cloudlet(0.1744639001, 227.93900471645316),
            Cloudlet(0.223579266052, 219.0713290189602),
            Cloudlet(0.181964169411573, 201.5487569068409),
            Cloudlet(0.214, 214.48453867500777),
            Cloudlet(0.17280358160429596, 234.39410232911868),
            Cloudlet(0.1944920280568944, 207.02823038213995),
            Cloudlet(0.1783818754, 223.41265231356718),
            Cloudlet(0.1683, 233.9211468860337),
            Cloudlet(0.146688365, 231.4713291531701),
            Cloudlet(0.22564216214, 221.28358920510524),
            Cloudlet(0.20957703822025314, 212.54557035828478),
            Cloudlet(0.226780382, 211.18713392071504),
            Cloudlet(0.21116917812109365, 218.4823864387658),
            Cloudlet(0.151193593, 205.7843587202983),
            Cloudlet(0.1780427, 229.17453400983493),
            Cloudlet(0.1757922966435225, 223.61592568479455),
            Cloudlet(0.16441644, 213.71975484946282),
            Cloudlet(0.2055003790000089, 212.03348790791765),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 2:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.562, 2, 520, 2223),
            VM(4, 0.462, 2, 420, 2223),
        ]
        lets = [
            Cloudlet(0.13319092276249678, 223.40096035204988),
            Cloudlet(0.21738639913249655, 152.0135921173882),
            Cloudlet(0.07246857305287957, 226.29977902295445),
            Cloudlet(0.019370351635005764, 165.2301259629893),
            Cloudlet(0.09480779353939567, 201.78021102720885),
            Cloudlet(0.1369809110158409, 144.76192512138763),
            Cloudlet(0.16475458648503433, 148.54590556949609),
            Cloudlet(0.0834129238658052, 218.58221285305328),
            Cloudlet(0.11581546212252139, 112.85666242275633),
            Cloudlet(0.13929510103557627, 107.40706401645812),
            Cloudlet(0.1565221397825591, 193.78155002230113),
            Cloudlet(0.19102180869300486, 112.4530702058775),
            Cloudlet(0.08146652109833258, 165.49749738120434),
            Cloudlet(0.10249327351816594, 83.444984574087),
            Cloudlet(0.07470309169175371, 198.9055318635577),
            Cloudlet(0.23081812605015645, 138.73903440985447),
            Cloudlet(0.032828248945182575, 199.22565417226912),
            Cloudlet(0.08552122206852507, 208.2926587666418),
            Cloudlet(0.19322409497400314, 163.98778045585408),
            Cloudlet(0.10113081944550398, 125.50839716252092),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 3:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.562, 2, 520, 2223),
            VM(4, 0.462, 2, 420, 2223),
        ]
        lets = [
            Cloudlet(0.06827156294599246, 68.58700882415538),
            Cloudlet(0.16272449565925795, 249.30427397724674),
            Cloudlet(0.05691834018008601, 171.9875191534254),
            Cloudlet(0.06739049174782769, 124.39382036975336),
            Cloudlet(0.11653446836803275, 156.10700645463714),
            Cloudlet(0.08458947752094678, 161.385020007308),
            Cloudlet(0.1823721784540141, 130.19350607849807),
            Cloudlet(0.24637466910710137, 225.61602478328365),
            Cloudlet(0.07774331908828445, 200.6671251245882),
            Cloudlet(0.141332172069729, 237.83022700270112),
            Cloudlet(0.22823490300220478, 171.20962348440577),
            Cloudlet(0.11250231816362276, 205.95860172194222),
            Cloudlet(0.12078681543691015, 162.27287610427246),
            Cloudlet(0.05060886566213532, 175.26282616713016),
            Cloudlet(0.10381860322841932, 135.56462787804983),
            Cloudlet(0.13176602750220665, 140.91938016904257),
            Cloudlet(0.10169347198228845, 161.09894156904562),
            Cloudlet(0.09010508209864243, 172.63560957377513),
            Cloudlet(0.13588775874502965, 193.57852960863693),
            Cloudlet(0.10622014506933027, 244.8431370977255),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 4:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.562, 2, 520, 2223),
            VM(4, 0.462, 2, 420, 2223),
        ]
        lets = [
            Cloudlet(0.05597964158087765, 170.08533036562363),
            Cloudlet(0.14994815203385584, 76.98507603745016),
            Cloudlet(0.12348171310736478, 179.14468080256475),
            Cloudlet(0.1440568312988094, 180.2429151113809),
            Cloudlet(0.08161995677303902, 150.22556454544855),
            Cloudlet(0.2020183477212536, 210.74594903191993),
            Cloudlet(0.034971540608563556, 262.1337595410899),
            Cloudlet(0.07371257918130304, 317.46883522973724),
            Cloudlet(0.12593337974741864, 198.43266356951753),
            Cloudlet(0.03750712376063421, 125.1579182893199),
            Cloudlet(0.11966098158691117, 255.31944171792637),
            Cloudlet(0.1350980459668553, 239.38180661939523),
            Cloudlet(0.14436002812377038, 206.74644651450362),
            Cloudlet(0.07095452496094512, 157.98692063872804),
            Cloudlet(0.18338919350175217, 104.06099594766538),
            Cloudlet(0.10556310305744938, 89.22219371472887),
            Cloudlet(0.2516690753424449, 277.2298866355138),
            Cloudlet(0.07553700730643567, 226.84977009202905),
            Cloudlet(0.1258426760587825, 187.8812660772367),
            Cloudlet(0.11162544688514706, 168.94090436007758),
        ]
        return {"cloudlets": lets, "nodes": nodes}
    elif ind == 5:
        nodes = [
            VM(0, 0.762, 2, 920, 2223),
            VM(1, 0.762, 2, 1200, 2223),
            VM(2, 0.762, 2, 850, 2223),
            VM(3, 0.562, 2, 520, 2223),
            VM(4, 0.462, 2, 420, 2223),
        ]
        lets = [
            Cloudlet(0.20452260719056714, 97.92036009928896),
            Cloudlet(0.28324152431976857, 203.6851393691716),
            Cloudlet(0.010879813032502392, 240.9519142066456),
            Cloudlet(0.1486214978322752, 191.74472592367337),
            Cloudlet(0.036751379394306366, 261.6995852755745),
            Cloudlet(0.10342998804270276, 188.82857887515),
            Cloudlet(0.12136778080161725, 92.0382408075655),
            Cloudlet(0.20212091779134683, 170.4132488653559),
            Cloudlet(0.13820186393327047, 133.14949767532323),
            Cloudlet(0.14654865994882177, 141.97237969469882),
            Cloudlet(0.10643268209338297, 165.6792746614171),
            Cloudlet(0.12394678165532778, 216.91341169130703),
            Cloudlet(0.14337043739189936, 78.40344585594639),
            Cloudlet(0.11212084391794733, 118.66891387570172),
            Cloudlet(0.16707065637016566, 238.17116739788622),
            Cloudlet(0.16856121205539706, 226.84642741889618),
            Cloudlet(0.1664929381521121, 167.45891694818846),
            Cloudlet(0.195502715087442, 180.27463568073503),
            Cloudlet(0.16999045983563793, 135.94526501574842),
            Cloudlet(0.15085030533426083, 119.9188113946199),
        ]
        return {"cloudlets": lets, "nodes": nodes}


# 第二实验的附加数据
def get_data_r2n6c24():
    nodes = [
        VM(0, 0.762, 2, 920, 2223),
        VM(1, 0.762, 2, 1200, 2223),
        VM(2, 0.762, 2, 850, 2223),
        VM(3, 0.762, 2, 1200, 2223),
        VM(4, 0.562, 2, 520, 2223),
        VM(5, 0.562, 2, 850, 2223),
    ]
    lets = [
        Cloudlet(0.149028, 207.29202854232486),
        Cloudlet(0.22797, 217.65238367958395),
        Cloudlet(0.174001, 227.93900471645316),
        Cloudlet(0.2237952, 219.0713290189602),
        Cloudlet(0.181913, 201.5487569068409),
        Cloudlet(0.214, 214.48453867500777),  # 6
        Cloudlet(0.1728096, 234.39410232911868),
        Cloudlet(0.1944994, 207.02823038213995),
        Cloudlet(0.1788754, 223.41265231356718),
        Cloudlet(0.1683, 233.9211468860337),
        Cloudlet(0.146688365, 231.4713291531701),
        Cloudlet(0.22564214, 221.28358920510524),  # 12
        Cloudlet(0.20950214, 212.54557035828478),
        Cloudlet(0.22678032, 211.18713392071504),
        Cloudlet(0.21116365, 218.4823864387658),
        Cloudlet(0.1511593, 205.7843587202983),
        Cloudlet(0.1780427, 229.17453400983493),
        Cloudlet(0.1757225, 223.61592568479455),  # 18
        Cloudlet(0.16441644, 213.71975484946282),
        Cloudlet(0.20550089, 212.03348790791765),
        Cloudlet(0.502863, 223.9211337),
        Cloudlet(0.8375, 238.8603291531701),
        Cloudlet(0.4214, 220.510524),
        Cloudlet(0.16324, 270.35828478),  # 24
    ]
    return {"cloudlets": lets, "nodes": nodes}


# 第二实验的附加数据
def get_data_r2n7c28():
    nodes = [
        VM(0, 0.562, 2, 520, 2223),
        VM(1, 0.562, 2, 850, 2223),
        VM(2, 0.762, 2, 850, 2223),
        VM(3, 0.762, 2, 920, 2223),
        VM(4, 0.762, 2, 920, 2223),
        VM(5, 0.762, 2, 1200, 2223),
        VM(6, 0.762, 2, 1200, 2223),
    ]
    lets = [
        Cloudlet(0.149028, 207.29202854232486),
        Cloudlet(0.22797, 217.65238367958395),
        Cloudlet(0.174001, 227.93900471645316),
        Cloudlet(0.2237952, 219.0713290189602),
        Cloudlet(0.181913, 201.5487569068409),
        Cloudlet(0.214, 214.48453867500777),  # 6
        Cloudlet(0.1728096, 234.39410232911868),
        Cloudlet(0.1944994, 207.02823038213995),
        Cloudlet(0.1788754, 223.41265231356718),
        Cloudlet(0.1683, 233.9211468860337),
        Cloudlet(0.146688365, 231.4713291531701),
        Cloudlet(0.22564214, 221.28358920510524),  # 12
        Cloudlet(0.20950214, 212.54557035828478),
        Cloudlet(0.22678032, 211.18713392071504),
        Cloudlet(0.21116365, 218.4823864387658),
        Cloudlet(0.1511593, 205.7843587202983),
        Cloudlet(0.1780427, 229.17453400983493),
        Cloudlet(0.1757225, 223.61592568479455),  # 18
        Cloudlet(0.16441644, 213.71975484946282),
        Cloudlet(0.20550089, 212.03348790791765),
        Cloudlet(0.502863, 223.9211337),
        Cloudlet(0.22678032, 211.18713392071504),
        Cloudlet(0.21116365, 218.4823864387658),
        Cloudlet(0.1511593, 205.7843587202983),  # 24
        Cloudlet(0.1780427, 229.17453400983493),
        Cloudlet(0.8375, 238.8603291531701),
        Cloudlet(0.4214, 220.510524),
        Cloudlet(0.16324, 270.35828478),  # 28
    ]
    return {"cloudlets": lets, "nodes": nodes}


# 保存均值和方差数据，以及问题规模和节点数量的线性关系参数
# 输入参数，一个数据集，
# 给出节点的数目，节点的参数固定，节点决定上限
#
# 保存参数：任务的均值和标准差
def calculateAndSave():
    data = get_data_r2n5c20(2)

    LETS_NUM = 24

    cpu_max = 0
    mem_max = 0
    for node in data["nodes"]:
        temp = node.getData()
        cpu_max += (temp[2]-temp[1])
        mem_max += (temp[4]-temp[3])
    print("集群cpu可用："+str(cpu_max))
    print("集群mem可用："+str(mem_max))
    cpu_mean = cpu_max/LETS_NUM
    mem_mean = mem_max/LETS_NUM
    print("集群cpu均值："+str(cpu_mean))
    print("集群mem均值："+str(mem_mean))

    data_array = np.zeros((20, 2))
    ind = 0
    for let in data["cloudlets"]:
        data_array[ind] = let.getData()
        ind += 1
    cpu_std = np.std(data_array[:, 0])
    mem_std = np.std(data_array[:, 1])
    print("任务cpu标准差"+str(np.std(data_array[:, 0])))
    print("任务mem标准差"+str(np.std(data_array[:, 0])))

    new_data = np.zeros((LETS_NUM, 2))
    new_data[:, 0] = np.random.normal(loc=cpu_mean - 0.04, scale=cpu_std, size=LETS_NUM)
    new_data[:, 1] = np.random.normal(loc=mem_mean - 20, scale=mem_std, size=LETS_NUM)
    print(20*np.array([cpu_mean, mem_mean])-np.sum(new_data, axis=0))
    np.savetxt("newdata.txt", new_data, fmt='%1.4e', delimiter=",")


# 读取参数并生成随机数据
def readAndGenerateCloudlet():
    data = np.loadtxt("newdata.txt", delimiter=",")
    # print(data)
    cloudlets = {}
    let_list = []
    for dat in data:
        let_list.append(Cloudlet(cpu_demand=dat[0], mem_demand=dat[1]))
    cloudlets["cloudlets"] = let_list
    return cloudlets


# 检查数据的有效性
def data_check(src_data):
    lets = src_data["cloudlets"]
    nodes = src_data["nodes"]
    cpu_sum = 0
    mem_sum = 0
    # hd_sum = 0
    for i in lets:
        cpu_sum += i.cpu_demand
        mem_sum += i.mem_demand
        # hd_sum += i.hd_demand
    cpu_give = 0
    mem_give = 0
    # hd_give = 0
    for j in nodes:
        cpu_give += j.cpu_velocity - j.cpu_supply
        mem_give += j.mem_capacity - j.mem_supply
        # hd_give += j.hd_capacity - j.hd_supply

    print(cpu_sum, cpu_give)
    print(mem_sum, mem_give)
    # print(hd_sum, hd_give)


if __name__ == '__main__':
    calculateAndSave()
    # readAndGenerateCloudlet()
